{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Nextest: Run all tests",
            "type": "shell",
            "command": "cargo nextest run test --workspace",
            "group": {
                "kind": "build",
                // "isDefault": true
            },
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": [
                {
                    "owner": "rust",
                    "fileLocation": [
                        "relative",
                        "${workspaceRoot}"
                    ],
                    "pattern": {
                        "regexp": "^(.*):(\\d+):(\\d+):\\s+(\\d+):(\\d+)\\s+(warning|error):\\s+(.*)$",
                        "file": 1,
                        "line": 2,
                        "column": 3,
                        "endLine": 4,
                        "endColumn": 5,
                        "severity": 6,
                        "message": 7
                    }
                }
            ]
        },
        {
            "label": "Nextest: Run tests for a package",
            "type": "shell",
            "command": "cargo",
            "args": [
                "nextest",
                "run",
                "-p",
                "${input:packageName}"
            ],
            "problemMatcher": [],
            "group": "test"
        },
        {
            "label": "rust: cargo check",
            "type": "shell",
            "command": "cargo check",
            "group": {
                "kind": "build",
            },
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": [
                {
                    "owner": "rust",
                    "fileLocation": [
                        "relative",
                        "${workspaceRoot}"
                    ],
                    "pattern": {
                        "regexp": "^(.*):(\\d+):(\\d+):\\s+(\\d+):(\\d+)\\s+(warning|error):\\s+(.*)$",
                        "file": 1,
                        "line": 2,
                        "column": 3,
                        "endLine": 4,
                        "endColumn": 5,
                        "severity": 6,
                        "message": 7
                    }
                }
            ]
        }
    ],
    "inputs": [
        {
            "id": "packageName",
            "type": "promptString",
            "description": "Enter the test binary name (not the function!)"
        }
    ]
}