name: Rust CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Rust Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install latest nextest release
        uses: taiki-e/install-action@nextest

      - uses: Swatinem/rust-cache@v2

      - name: Run tests
        run: cargo nextest run

  Coverage:
    name: Rust Coverage
    runs-on: ubuntu-latest
    container:
      image: xd009642/tarpaulin:develop-nightly
      options: --security-opt seccomp=unconfined
    steps:
      - name: Install dependencies
        run: |
          apt-get update && apt-get install -y clang libclang-dev
        shell: bash

      - name: Checkout repository
        uses: actions/checkout@v2

      - uses: Swatinem/rust-cache@v2

      - name: Generate code coverage
        run: |
          cargo +nightly tarpaulin --target-dir target/tarpaulin --verbose --all-features --workspace --timeout 120 --out xml --skip-clean --release

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: cobertura.xml
          fail_ci_if_error: true
